//---------------------------------------------- 
//  Button Split - btn-split()
//  @description: Creates a button that has a splitting border effect
//  @param:       $color - Color
//  @param:       $borderColor: [$color] - Border color
//  @param:       $borderWidth: [2px] - Border width
//  @param:       $pad: [0] - Padding
//----------------------------------------------
@mixin btn-split($color, $borderColor: $color, $borderWidth: 1px, $pad: 0) {
  position: relative;

  padding: $pad;

  color: $color;

  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;

    height: 100%;
    width: 100%;

    border: $borderWidth solid $borderColor;
    transition: transform 200ms ease-in;
  }

  &:hover {
    &:before,
    &:after {
      transition: transform 200ms ease-out;
    }

    &:before {
      transform: translate3d(-$borderWidth - 1px, $borderWidth + 1px, 0);
    }

    &:after {
      transform: translate3d($borderWidth + 1px, -$borderWidth - 1px, 0);
    }
  }
}
///
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);
///
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }
  
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }
  
  @if $fallback {
    font-size: $fallback;
  }
  
  font-size: $responsive;
}